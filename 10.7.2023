The function def differenceofSum(n. m) accepts two integers n, m as arguments Find the sum of all numbers in range from 1 to m(both inclusive) that are not divisible by n. Return difference between sum of integers not divisible by n with sum of numbers divisible by n.

Assumption:

n>0 and m>0
Sum lies between integral range
Example

Input
n:4
m:20
Output
90
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
CODING:
def diffsum(n,m):
    d=0
    nd=0
    for i in range(1,m+1):
        if(i%n==0):
            d=d+i
        else:
            nd=nd+i
    return abs(d-nd)    

a=int(input("enter the value of a:"))
b=int(input("enter the value of b:"))
difference=diffsum(a,b)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

QUESTION 2:
You are required to implement the following Function def LargeSmallSum(arr). 

The function accepts an integers arr of size ’length’ as its arguments you are required to return the sum of second largest largest element from the even positions and second smallest from the odd position of given ‘arr’.

Assumption:

All array elements are unique
Treat the 0th position a seven
NOTE

Return 0 if array is empty
Return 0, if array length is 3 or less than 3
Example:-

Input

arr:3 2 1 7 5 4

Output

7

CODING:

arr=[]
n = int(input("Enter number of elements : "))
for i in range(0, n):
    ele = int(input())
    arr.append(ele) 
    
  
even=[]
odd=[]
for i in range(0,n):
    if(i%2==0):
        even.append(arr[i])
    else:
        odd.append(arr[i])
even.remove(max(even))
odd.remove(min(odd))
    
print(max(even)+min(odd))


            
    
