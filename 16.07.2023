Perform the following function. 
def Productsmallpair(sum,arr)

This function accepts the integers sum and arr. It is used to find the arr(j) and arr(k), where k ! = j. arr(j) and arr(k) should be the smallest elements in the array.

Keep this in mind:

If n<2 or empty, return –1.
If these pairs are not found, then return to zero.
Make sure all the values are within the integer range.
 
Example

Input:
Sum: 9
Arr: 5 4 2 3 9 1 7

Output:
2

CODING:

def productsmallpair(sum,arr):
    if(n<2):
        return -1
    arr.sort()
    i=0
    a=arr[i]
    b=arr[i+1]
    if(a+b<sum):
        return (a*b)
    else:
        return 0

sum=int(input())
n=int(input())
arr=[]
for j in range(n):
    arr.append(int(input()))
result=productsmallpair(sum,arr)
print(result)
===============================================================================================================================================================
Execute the given function.
def LargeSmallSum(arr)

The function takes an integral arr which is of the size or length of its arguments. Return the sum of the second smallest element at odd position ‘arr’ and the second largest element at the even position.

Assumption

Every array element is unique.
Array is 0 indexed.
Note:

If the array is empty, return 0.
If array length is 3 or <3, return 0.
 
Example

Input:
Arr: 3 2 1 7 5 4

Output:
7

Coding:

arr=[]
n = int(input("Enter number of elements : "))
for i in range(0, n):
    ele = int(input())
    arr.append(ele) 
    
even=[]
odd=[]
for i in range(0,n):
    if(i%2==0):
        even.append(arr[i])
    else:
        odd.append(arr[i])
even.remove(max(even))
odd.remove(min(odd))
    
print(max(even)+min(odd))

        
